<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{CFC291E2-CC4A-4DAB-9D13-CE17A60E9BDA}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>DivineInject.Test</RootNamespace>
    <AssemblyName>DivineInject.Test</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Moq">
      <HintPath>..\packages\Moq.4.0.10827\lib\NET40\Moq.dll</HintPath>
    </Reference>
    <Reference Include="nunit.framework, Version=2.6.2.12296, Culture=neutral, PublicKeyToken=96d09a1eb7f44a77, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>..\packages\NUnit.2.6.2\lib\nunit.framework.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Xml" />
    <Reference Include="TestFirst.Net">
      <HintPath>..\packages\TestFirst.Net.0.3.4\lib\net\45\TestFirst.Net.dll</HintPath>
    </Reference>
    <Reference Include="TestFirst.Net.Extensions">
      <HintPath>..\packages\TestFirst.Net.Extensions.0.3.4\lib\net\45\TestFirst.Net.Extensions.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Compile Include="DivineInjectorTest.cs" />
    <Compile Include="DummyModel\DomainObjectWithConstructorWithTwoArgsOfSameType.cs" />
    <Compile Include="DummyModel\DomainObjectWithDefaultConstructor.cs" />
    <Compile Include="DummyModel\DomainObjectWithDependencyAndArg.cs" />
    <Compile Include="DummyModel\DomainObjectWithDependencyAndTwoArgs.cs" />
    <Compile Include="DummyModel\DomainObjectWithOneDependency.cs" />
    <Compile Include="DummyModel\DomainObjectWithSingleArgConstructor.cs" />
    <Compile Include="DummyModel\DomainObjectWithTwoConstructors.cs" />
    <Compile Include="DummyModel\IDatabase.cs" />
    <Compile Include="DummyModel\IDomainObject.cs" />
    <Compile Include="DummyModel\IDomainObjectWithName.cs" />
    <Compile Include="FactoryGenerator\ConstructorArgListTest.cs" />
    <Compile Include="FactoryGenerator\FactoryClassEmitterIntegrationTest.cs" />
    <Compile Include="FactoryGenerator\FactoryClassFactoryTest.cs" />
    <Compile Include="FactoryGenerator\FactoryClassTest.cs" />
    <Compile Include="FactoryGenerator\FactoryMethodFactoryTest.cs" />
    <Compile Include="FactoryGenerator\IDummyFactory.cs" />
    <Compile Include="FactoryGenerator\IFactoryInterfaceWithTwoMethods.cs" />
    <Compile Include="FactoryGenerator\InjectableConstructorArgDefinitionTest.cs" />
    <Compile Include="InstantiatorTest.cs" />
    <Compile Include="Matchers\AMethodInfo.cs" />
    <Compile Include="Matchers\AMixedList.cs" />
    <Compile Include="Matchers\AnInjectableConstructorArgDefinition.cs" />
    <Compile Include="Matchers\APassedConstructorArgDefinition.cs" />
    <Compile Include="Matchers\AType.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\DivineInject\DivineInject.csproj">
      <Project>{79f0c2ac-b84c-4b3f-82ea-964cdd28889d}</Project>
      <Name>DivineInject</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <Service Include="{82A7F48D-3B50-4B1E-B82E-3ADA8210C358}" />
  </ItemGroup>
  <ItemGroup />
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>